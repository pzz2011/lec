# Define the root directory
ROOT_DIR ?= $(shell pwd) 
# line 3 define ROOT_DIR as $(shell pwd) if and only if ROOT_DIR has no
# value before. Otherwise, nothing will happen.
export ROOT_DIR


# Directory for the output binaries
BUILD_DIR ?= $(ROOT_DIR)/build 
export BUILD_DIR

# Source code root directory
SRC_ROOT_DIR ?= $(ROOT_DIR)/src 
export SRC_ROOT_DIR 

# Generated source code root directory 
SRC_GEN_DIR ?= $(ROOT_DIR)/src/Generated-cxx 
export SRC_GEN_DIR 

# Generated source code root directory 
CSRC_GEN_DIR = $(ROOT_DIR)/src/generated-c
export CSRC_GEN_DIR 

# Helper scripts directory
SCRIPTS_DIR ?= $(ROOT_DIR)/scripts
export SCRIPTS_DIR

# Externals libraries directory 
EXT_DIR ?= $(ROOT_DIR)/ext 
export EXT_DIR







#############################################
###  INCLUDES
###########################################

INCLUDES = -I$(SRC_ROOT_DIR) -I$(SRC_GEN_DIR) -I$(CSRC_GEN_DIR)



LIBS += -lgflags -lglog -lboost_system_ -lboost_thread -lboost_regex -lprotobuf


###########################################
### COMPILER
##########################################
CXX = clang++
CXX_RELEASE := $(shell whereis clang++ | awk '{split($$0, a, ":"); print a[2]}')
ifeq ( $(CXX_RELEASE) )
	CXX = g++
endif

# line 52 to line 56 if system has installed clang++, then use it. otherwise use g++ as default.

OPTFLAGS = -g -O0

CPPFLAGS = $(INCLUDES) -std=c++11 -Wall -Wextra -pedantic -Wno-unused-parameter -Wno-long-long -Wno-variadic-macros -Wno-unused-function -Wno-vla 

PBC = protoc 

PBCC = protoc-c

PBCFLAGS = 

#########################################
### MAKE
########################################
MAKE = make 

MAKEFLAGS = --no-print-directory 
